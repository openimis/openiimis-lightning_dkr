# This file is based on these images:
#
#   - https://github.com/OpenFn/Lightning Dockerfile-dev


ARG ELIXIR_VERSION=1.14.1
ARG OTP_VERSION=25.1.2
ARG DEBIAN_VERSION=bullseye-20221004-slim
ARG NODE_VERSION=18.12.0

ARG BUILDER_IMAGE="hexpm/elixir:${ELIXIR_VERSION}-erlang-${OTP_VERSION}-debian-${DEBIAN_VERSION}"
ARG RUNNER_IMAGE="debian:${DEBIAN_VERSION}"

FROM ${BUILDER_IMAGE} as dev
ARG NODE_VERSION

# install build and dev dependencies
RUN apt-get update -y && apt-get install -y \
  build-essential curl git inotify-tools

# COPY bin/install_node bin/install_node
# Build from local source 
RUN git clone https://github.com/OpenFn/Lightning --branch v0.12.2 --depth 1
RUN mv Lightning app

# prepare build dir
WORKDIR /app

RUN bin/install_node ${NODE_VERSION}
RUN apt-get clean && rm -f /var/lib/apt/lists/*_*



# Fixed version
#RUN git checkout 1302484e2f9cb46c0de623ac642ca3d4882d7e62


# Remaining acions are taken directly from https://github.com/OpenFn/Lightning Dockerfile-dev

# install hex + rebar
RUN mix local.hex --force && \
  mix local.rebar --force

# set build ENV

ARG MIX_ENV="dev"
ENV MIX_ENV=${MIX_ENV}

# COPY mix.* ./
RUN mix deps.get --only $MIX_ENV


# copy compile-time config files before we compile dependencies
# to ensure any relevant config change will trigger the dependencies
# to be re-compiled.
# COPY config config
RUN mix deps.compile

# COPY priv priv
# COPY lib lib
RUN mix lightning.install_runtime

# COPY bin bin
# COPY assets assets
RUN npm install --prefix assets

ENTRYPOINT ["/app/bin/entrypoint"]

ARG PORT
EXPOSE ${PORT}

CMD ["mix", "phx.server"]

################################################################################

### Seutp specific for openIMIS demo

COPY imisSetupScripts imisSetupScripts
COPY imisSetup.sh imisSetup.sh 
RUN chmod u+x imisSetup.sh
